<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<import resource="classpath:redis.xml"/>
<!-- 	引入mongodb配置文件 -->
	<import resource="classpath:spring-mongo.xml"/>

    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <property name="loginUrl" value="/"/>
        <property name="filters">
            <map>
                <!--<entry key="authc" value-ref="authorizationFilter"/>-->
                <entry key="authc" value-ref="authenticationFilter"/>
            </map>
        </property>
        <property name="filterChainDefinitions">
            <value>
                /system/captcha=anon
                /css/**=anon
                /js/** = anon
               /game/**= anon
               /images/**= anon
               /img/**= anon
               /Scripts/**= anon
               /src/**= anon
               /gopasslogin=anon
               /login= anon
            </value>
        </property>
    </bean>
    <!-- securityManager安全管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realms">
            <list>
                <ref bean="shiroRealm"/>
            </list>
        </property>
        <!-- 注入缓存管理器 -->
        <property name="cacheManager" ref="cacheManager"/>
        <!-- 注入session管理器 -->
        <property name="sessionManager" ref="sessionManager"/>
        <!-- 记住我 -->
    </bean>
    <!-- 这个配置实在用户登录时调用，参数是用户登陆名密码 ，就是根据登陆名找到用户的角色和权限信息-->
    <bean id="shiroRealm" class="com.jk.shiro.ShiroRealm">
        <property name="credentialsMatcher" ref="credentialsMatcher"/>
    </bean>

    <bean id="redisSessionDAO" class="com.jk.shiro.RedisSessionDao"/>
    
    <bean id="cacheManager" class="com.jk.shiro.RedisCacheManager">
        <property name="redisTemplate" ref="redisTemplate"/>
    </bean>

    <bean id="credentialsMatcher"
          class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
        <property name="hashAlgorithmName" value="md5"/>
        <property name="hashIterations" value="2"/>
    </bean>

    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <property name="globalSessionTimeout" value="2592000000"/>
        <property name="sessionValidationSchedulerEnabled" value="true"/>
        <property name="sessionDAO" ref="redisSessionDAO"/>
    </bean>

    <!--<bean id="authorizationFilter" class="com.hunt.system.security.shiro.ShiroAuthorizationFilter"/>-->
    <bean id="authenticationFilter" class="com.jk.shiro.ShiroAuthenticationFilter"/>

    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
          depends-on="lifecycleBeanPostProcessor"/>
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>

</beans>
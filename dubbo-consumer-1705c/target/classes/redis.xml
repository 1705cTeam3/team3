<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xmlns:mvc="http://www.springframework.org/schema/mvc"
xmlns:p="http://www.springframework.org/schema/p"  
xmlns:cache="http://www.springframework.org/schema/cache" 
xmlns:context="http://www.springframework.org/schema/context" 
xsi:schemaLocation="
http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-4.0.xsd
http://www.springframework.org/schema/mvc 
http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
 http://www.springframework.org/schema/cache 
http://www.springframework.org/schema/cache/spring-cache-4.0.xsd
">

	<!-- 开启注解扫描 识别框架搭建过程中的 @service 和 @repository base-package 扫描com.jk包下的所有类 
		识别类中有关于spring的注解 注解 其实就是在java类当中编写一个标志，能够被java代码所识别，通过该注解的形式，做对应的代码操作 -->
	<context:component-scan base-package="com.jk">
	</context:component-scan>
	
	
	<!-- 引入属性文件 -->
	<context:property-placeholder location="classpath:jdbc.properties" />
	<!-- redis融入Spring -->
	<bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxIdle" value="${redis.maxIdle}" />
        <property name="maxTotal" value="${redis.maxActive}" />
        <property name="maxWaitMillis" value="${redis.maxWait}" />
        <property name="testOnBorrow" value="${redis.testOnBorrow}" />
    </bean>
	
	 <bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory" p:host-name="${redis.host}" p:port="${redis.port}" 
        p:pool-config-ref="poolConfig" />
    <bean id="stringSerializer" class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
   
  <!--开启事务，可以通过transcational注解控制 --> 
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="connectionFactory" />
        <property name="keySerializer" ref="stringSerializer" />
        <property name="enableTransactionSupport" value="true" />
    </bean>
</beans>